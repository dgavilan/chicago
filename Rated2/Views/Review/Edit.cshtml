@model Rated2.Models.Project.ProjectViewModel
@using Rated.Core.Shared;

<h2>
    @if (Model.ProjectStatus == Enums.ProjectStatus.ReviewerPendingAcceptance)
    {
        <span>Waiting for you to Accept</span>
    }
    else
    {
        <span>In Review</span>
    }
</h2>

<div class="alert alert-info">
    <b>Project Status:</b> @Rated.Core.Shared.EnumHelper.GetDescription(Model.ProjectStatus)

    @if (Model.ProjectStatus == Enums.ProjectStatus.ReviewerPendingAcceptance)
    {
        <button class="btn btn-success" id="btnReviewerAcceptsRequest">
            <span class="glyphicon glyphicon-ok-sign"></span>
            Accept
        </button>

        <span>&nbsp;&nbsp;</span>

        <button class="btn btn-danger" id="btnReviewerDeclinesRequest">
            <span class="glyphicon glyphicon-remove-sign"></span>
            Decline
        </button>
    }
    else if (Model.ProjectStatus == Enums.ProjectStatus.ReviewerInProgressReviewingProject)
    {
        <button class="btn btn-success" id="btnReviewerAcceptsRequest">
            <span class="glyphicon glyphicon-ok-sign"></span>
            Rate this Project
        </button>

        <span>&nbsp;&nbsp;</span>

        <button class="btn btn-danger" id="btnReviewerRatesProject">
            <span class="glyphicon glyphicon-ok-sign"></span>
            Decline
        </button>
    }

</div>

<h4>
    Project Owner:
    <b>@Model.OwnerFirstName @Model.OwnerLastName</b>
</h4>

<table class="table table-striped">
    <thead>
        <tr>
            <th width="90%">Project</th>
            <th width="90px">Modified</th>
            @*<th>Status</th>*@
        </tr>
    </thead>
    <tr>
        <td>
            @if (Model.ProjectStatus == Enums.ProjectStatus.Draft)
            {
                <button class="btn btn-link">
                    <span class="glyphicon glyphicon-edit">
                    </span> Edit
                </button>
                <span>&nbsp; | &nbsp;</span>
                <button class="btn btn-link">
                    <span class="glyphicon glyphicon-trash"></span> Delete
                </button>
            }

            <div id="divProjectName">
                <b>@Html.DisplayFor(x => x.ProjectName)</b>
            </div>

            <div id="divProjectDescription">
                @Html.DisplayFor(x => x.ProjectDescription)

            </div>
        </td>
        <td>
            @Html.DisplayFor(x => x.ModifiedDate)
        </td>
    </tr>
</table>

<hr />

<table class="table table-striped">
    <thead>
        <tr>
            <th width="25px">Task</th>
            <th width="35%">Detail</th>
            <th>Hours</th>
            <th>Modified</th>
            <th>Status</th>
            <th>Rating</th>
            <th></th>
        </tr>
    </thead>
    @{
        var lineItemNo = 1;
        foreach (var detail in Model.ProjectDetails)
        {
            <tr>
                <td>
                    @lineItemNo
                </td>
                <td>
                    <b>@detail.DetailName</b>
                    &nbsp;
                    <a href="#" onclick="Project.ShowReviewInstructions('@detail.ProjectDetailId')">
                        <span class="glyphicon glyphicon-file"></span>
                        Review Instructions
                    </a>

                    <br />
                    @detail.DetailDescription
                </td>
                <td>
                    @Convert.ToDouble(detail.HoursToComplete)
                </td>
                <td width="100px">
                    @detail.ModifiedDate
                </td>
                <td>
                    @Rated.Core.Shared.EnumHelper.GetDescription(@detail.DetailStatus)
                </td>
                <td>
                    @if (detail.DetailStatus == Enums.ProjectDetailStatus.Done)
                    {
                        @detail.DetailRating
                    }
                </td>

                <td nowrap>
                    @switch (detail.DetailStatus)
                    {
                        case Enums.ProjectDetailStatus.ReviewerPendingAcceptance:
                            <button class="btn btn-success" style="width:160px" onclick="Project.ReviewerAcceptsProjectDetail('@detail.ProjectDetailId')">
                                <span class="glyphicon glyphicon-ok-sign"></span>
                                Accept Request
                            </button>

                            <div style="height:7px">&nbsp;</div>

                            <button class="btn btn-danger" style="width:160px" onclick="Project.ReviewerDeclinesProjectDetail('@detail.ProjectDetailId')">
                                <span class="glyphicon glyphicon-remove-sign"></span>
                                Decline Request
                            </button>
                            break;
                        case Enums.ProjectDetailStatus.ReviewerInProgressReviewingDetail:
                        <button class="btn btn-success" style="width:160px" onclick="Project.DetailReviewComplete('@detail.ProjectDetailId')">
                            <span class="glyphicon glyphicon-ok-sign"></span> Review Complete
                        </button>

                        <div style="height:7px">&nbsp;</div>

                        <button class="btn btn-danger" style="width:160px">
                            <span class="glyphicon glyphicon-remove-sign"></span> Decline Review
                        </button>
                            break;
                    }
                </td>

            </tr>
                    lineItemNo++;
        }
    }
</table>

<script src="~/Scripts/Rated/project.js"></script>

@Html.Partial("_ModalReviewComplete")
@Html.Partial("_ModalConfirmReviewerAccept")
@Html.Partial("_ModalReviewInstructions")

@Html.HiddenFor(x => x.ProjectId)
@Html.HiddenFor(x => x.ProjectStatus)

<input type="hidden" id="DetailItemNumber" name="DetailItemNumber">
<input type="hidden" id="ProjectDetailId" name="ProjectDetailId">
