@model Rated2.Models.Project.ProjectViewModel
@using Rated.Core.Shared;

<h2>
    @if (Model.ProjectStatus == Enums.ProjectStatus.Draft)
    {
        <span>Edit Project</span>
    }

    @if (Model.ProjectStatus == Enums.ProjectStatus.ReviewerPendingAcceptance)
    {
        <span>Waiting for Reviewer</span>
    }
</h2>

<div class="alert alert-info">
    <b>Project Status:</b> @Rated.Core.Shared.EnumHelper.GetDescription(Model.ProjectStatus)

    &nbsp;&nbsp;

    @switch (Model.ProjectStatus)
    {
        @*case Enums.ProjectStatus.Draft:
            <button class="btn btn-success" id="btnOpenStartProjectModal">
                <span class="glyphicon glyphicon-ok-sign"></span>
                Start Project
            </button>
            break;*@
        case Enums.ProjectStatus.ReviewerPendingAcceptance:
        <button class="btn btn-danger">
            <span class="glyphicon glyphicon-trash"></span>
            Cancel Project
        </button>
            break;
    }
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th width="70px"></th>
            <th width="75%">Project</th>
            <th width="110px">Modified</th>
            <th width="70px"></th>
        </tr>
    </thead>
    <tr>
        <td>
            @if (Model.ProjectStatus == Enums.ProjectStatus.Draft)
            {
                <button class="btn btn-link">
                    <span class="glyphicon glyphicon-edit">
                    </span> Edit
                </button>

            }
        </td>
        <td>


            <div id="divProjectName">
                <b>@Html.DisplayFor(x => x.ProjectName)</b>
            </div>

            <div id="divProjectDescription">
                @Html.DisplayFor(x => x.ProjectDescription)
            </div>
        </td>
        <td>
            @Html.DisplayFor(x => x.ModifiedDate)
        </td>
        <td>
            @if (Model.ProjectStatus == Enums.ProjectStatus.Draft)
            {

                <button class="btn btn-link">
                    <span class="glyphicon glyphicon-trash"></span> Delete
                </button>
            }
        </td>
    </tr>
</table>

<hr />

@if (Model.ProjectStatus != Enums.ProjectStatus.Done)
{
    <h4>
        Project Tasks (<span id="spanItemDetailCount">@Model.ProjectDetails.Count()</span>)
        <br />
        <button class="btn btn-default" onclick="Project.ShowAddDetail()">
            <span class="glyphicon glyphicon-plus"></span> Add Task
        </button>
        <button class="btn btn-default" id="btnAssignReviewer">
            <span class=" glyphicon glyphicon-user">
            </span> Assign One Reviewer to all Tasks
        </button>
    </h4>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>#</th>
            <th width="30%">Detail</th>
            <th>Hours</th>
            <th>Modified</th>
            <th>Status</th>
            <th width="200px">Reviewer</th>
            <th width="200px">Rating</th>
            <th width="70px"></th>
        </tr>
    </thead>
    @{
        var lineItemNo = 1;
        foreach (var detail in Model.ProjectDetails)
        {
            <tr>
                <td>
                    @lineItemNo
                </td>
                <td>
                    @if (detail.DetailStatus == Enums.ProjectDetailStatus.Draft)
                    {
                        <b>
                            <a href="#" onclick="Project.ShowEditDetail('@detail.ProjectDetailId', '@detail.DetailName', '@detail.DetailDescription', '@detail.HoursToComplete', '@detail.ReviewInstructions')">
                                @detail.DetailName
                                <span class="glyphicon glyphicon-edit"></span>
                            </a>

                        </b>
                    }
                    else
                    {
                        <b>
                            @detail.DetailName
                        </b>
                    }

                    <br />
                    @detail.DetailDescription
                </td>





                <td>
                    @Convert.ToDouble(detail.HoursToComplete)
                </td>
                <td width="100px">
                    @detail.ModifiedDate
                </td>
                <td>
                    @Rated.Core.Shared.EnumHelper.GetDescription(detail.DetailStatus)
                </td>
                <td>
                    @switch (detail.DetailStatus)
                    {
                        case Enums.ProjectDetailStatus.Draft:
                            <button class="btn btn-default" onclick="Project.AssignDetailReviewer('@detail.ProjectDetailId')">
                                <span class="glyphicon glyphicon-user"></span> Assign Reviewer
                            </button>
                            break;
                        case Enums.ProjectDetailStatus.ReviewerPendingAcceptance:
                            <button class="btn btn-default">
                                <span class="glyphicon glyphicon-remove"></span>
                                Cancel Review Request for: <br /> @detail.ReviewerFullName
                            </button>
                            break;
                        case Enums.ProjectDetailStatus.OwnerInProgressWorkingOnProject:
                        case Enums.ProjectDetailStatus.ReviewerInProgressReviewingDetail:
                        case Enums.ProjectDetailStatus.Done:
                            <span>
                                @detail.ReviewerFullName
                            </span>
                            break;
                    }

                    @*@switch (detail.ReviewerStatusId)
                        {
                            case (int)Enums.ProjectReviewerStatus.OwnerIsWorkingOnTask:
                                <p>
                                    Approver: @detail.ReviewerFullName
                                </p>
                                break;
                            case (int)Enums.ProjectReviewerStatus.WaitingForReviewerToAccept:
                            <p>
                                @Rated.Core.Shared.EnumHelper.GetDescription((Enums.ProjectReviewerStatus)detail.ReviewerStatusId)
                                <br />
                                Approver: @detail.ReviewerFullName
                                <br />
                                <a href="#" class="btn btn-link">
                                    <span class="glyphicon glyphicon-remove"></span>
                                    Remove Approver
                                </a>
                            </p>
                                break;
                            case (int)Enums.ProjectReviewerStatus.NewTaskNeedsReviewer:
                            <button class="btn btn-btn" onclick="Project.AssignDetailReviewer('@detail.ProjectDetailId')">
                                <span class="glyphicon glyphicon-plus"></span> Assign Reviewer
                            </button>
                                break;
                            case (int)Enums.ProjectReviewerStatus.ReviewerDeclinedNeedsReviewer:
                                break;
                        }*@

                </td>
                <td>
                    @if (detail.DetailStatus == Enums.ProjectDetailStatus.Done)
                    {
                        @detail.DetailRating
                    }
                </td>

                <td>
                    @switch (detail.DetailStatus)
                    {
                        case Enums.ProjectDetailStatus.OwnerInProgressWorkingOnProject:
                            <button class="btn btn-success" style="width:160px" onclick="Project.ConfirmProjectDetailComplete('@detail.ProjectDetailId')">
                                <span class="glyphicon glyphicon-ok-sign"></span> Task is Complete
                            </button>

                            <div style="height:7px">&nbsp;</div>

                            <button class="btn btn-danger" style="width:160px">
                                <span class="glyphicon glyphicon-remove-sign"></span> Cancel this Task
                            </button>
                            break;
                    }


                    @if (detail.DetailStatus == Enums.ProjectDetailStatus.Draft)
                    {
                        <button class="btn btn-link" onclick="Project.DeleteDetail('@detail.ProjectId', '@detail.ProjectDetailId')">
                            <span class="glyphicon glyphicon-trash"></span> Delete
                        </button>
                    }

                </td>

            </tr>
                    lineItemNo++;
        }
    }
</table>
<input type="hidden" id="TotalDetailCount" name="TotalDetailCount" value="@lineItemNo">

<script language="javascript">
    var openAddProjectModal = @ViewBag.OpenAddProjectModal;
</script>

<script src="~/Scripts/Rated/project.js"></script>

@Html.Partial("_ModalCompleteDetail")
@Html.Partial("_ModalAddProject")
@Html.Partial("_ModalAddItem")
@Html.Partial("_ModalStartProject")
@Html.Partial("_ModalAssignReviewer", @Model)

@Html.HiddenFor(x => x.ProjectId)
@Html.HiddenFor(x => x.ProjectStatus)
<input type="hidden" id="DetailItemNumber" name="DetailItemNumber">
<input type="hidden" id="ProjectDetailId" name="ProjectDetailId">
